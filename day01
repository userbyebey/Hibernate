Hibernate概述
什么是框架
1 写程序，使用框架之后，帮我们实现一部分功能，使用框架好处，少写一部分代码实现功能

什么是hibernate框架（重点）
1 hibernate框架应用在javaee三层结构中 dao层框架

2 在dao层里面做对数据库crud操作，使用hibernate实现crud操作，hibernate底层代码就是jdbc，hibernate对jdbc进行封装，使用hibernate好处，不需要写复杂jdbc代码了，
不需要写sql语句实现

3 hibernate开源的轻量级的框架

lib：hibernate相关jar包

什么是orm思想（重点）
1 hibernate使用orm思想对数据库进行crud操作
2 在web阶段学习 javabean，更正确的叫法 实体类
3 orm：object relational mapping，对象关系映射
文字描述：
（1）让实体类和数据库表进行一一对应关系
让实体类首先和数据库表对应
让实体类属性 和 表里面字段对应
（2）不需要直接操作数据库表，而操作表对应实体类对象

画图描述：
 
 

Hibernate入门
搭建hibernate环境（重点）
第一步 导入hibernate的jar包
因为使用hibernate时候，有日志信息输出，hibernate本身没有日志输出的jar包，导入其他日志的jar包
不要忘记还有mysql驱动的jar
第二步 创建实体类
 
（1）使用hibernate时候，不需要自己手动创建表，hibernate帮把表创建

第三步 配置实体类和数据库表一一对应关系（映射关系）
使用配置文件实现映射关系
（1）创建xml格式的配置文件
- 映射配置文件名称和位置没有固定要求
- 建议：在实体类所在包里面创建，实体类名称.hbm.xml
（2）配置是是xml格式，在配置文件中首先引入xml约束
- 学过约束dtd、schema，在hibernate里面引入的约束dtd约束
 
 
（3）配置映射关系
<hibernate-mapping>
	<!-- 1 配置类和表对应 
		class标签
		name属性：实体类全路径
		table属性：数据库表名称
	-->
	<class name="cn.itcast.entity.User" table="t_user">
		<!-- 2 配置实体类id和表id对应 
			hibernate要求实体类有一个属性唯一值
			hibernate要求表有字段作为唯一值
		-->
		<!-- id标签
			name属性：实体类里面id属性名称
			column属性：生成的表字段名称
		 -->
		<id name="uid" column="uid">
			<!-- 设置数据库表id增长策略 
				native:生成表id值就是主键自动增长
			-->
			<generator class="native"></generator>
		</id>
		<!-- 配置其他属性和表字段对应 
			name属性：实体类属性名称
			column属性：生成表字段名称
		-->
		<property name="username" column="username"></property>
		<property name="password" column="password"></property>
		<property name="address" column="address"></property>
	</class>
</hibernate-mapping>

第四步 创建hibernate的核心配置文件
（1）核心配置文件格式xml，但是核心配置文件名称和位置固定的
- 位置：必须src下面
- 名称：必须hibernate.cfg.xml
 
（2）引入dtd约束
 
（3）hibernate操作过程中，只会加载核心配置文件，其他配置文件不会加载
第一部分： 配置数据库信息 必须的
 
第二部分： 配置hibernate信息 可选的
 
第三部分： 把映射文件放到核心配置文件中
 
实现添加操作
第一步 加载hibernate核心配置文件

第二步 创建SessionFactory对象

第三步 使用SessionFactory创建session对象

第四步 开启事务

第五步 写具体逻辑 crud操作

第六步 提交事务

第七步 关闭资源

	@Test
	public void testAdd() {
//		第一步 加载hibernate核心配置文件
		// 到src下面找到名称是hibernate.cfg.xml
		//在hibernate里面封装对象
		Configuration cfg = new Configuration();
		cfg.configure();
		
//		第二步 创建SessionFactory对象
		//读取hibernate核心配置文件内容，创建sessionFactory
		//在过程中，根据映射关系，在配置数据库里面把表创建
		SessionFactory sessionFactory = cfg.buildSessionFactory();
		
//		第三步 使用SessionFactory创建session对象
		// 类似于连接
		Session session = sessionFactory.openSession();
		
//		第四步 开启事务
		Transaction tx = session.beginTransaction();

//		第五步 写具体逻辑 crud操作
		//添加功能
		User user = new User();
		user.setUsername("小王");
		user.setPassword("250");
		user.setAddress("日本");
		//调用session的方法实现添加
		session.save(user);
		
//		第六步 提交事务
		tx.commit();

//		第七步 关闭资源
		session.close();
		sessionFactory.close();
	}
看到效果：
（1）是否生成表
 
（2）看表是否有记录
 
Hibernate配置文件详解
Hibernate映射配置文件（重点）
1 映射配置文件名称和位置没有固定要求

2 映射配置文件中，标签name属性值写实体类相关内容
（1）class标签name属性值实体类全路径
（2）id标签和property标签name属性值 实体类属性名称

3 id标签和property标签，column属性可以省略的
（1）不写值和name属性值一样的

4 property标签type属性，设置生成表字段的类型，自动对应类型

Hibernate核心配置文件
1 配置写位置要求
 

2 配置三部分要求
（1）数据库部分必须的
（2）hibernate部分可选的
（3）映射文件必须的

3 核心配置文件名称和位置固定的
（1）位置：src下面
（2）名称：hibernate.cfg.xml

Hibernate核心api
Configuration
1 代码
 
（1）到src下面找到名称hibernate.cfg.xml配置文件，创建对象，把配置文件放到对象里面（加载核心配置文件）

SessionFactory（重点）
1 使用configuration对象创建sessionFactory对象
（1）创建sessionfactory过程中做事情：
- 根据核心配置文件中，有数据库配置，有映射文件部分，到数据库里面根据映射关系把表创建
 

2 创建sessionFactory过程中，这个过程特别耗资源的
（1）在hibernate操作中，建议一个项目一般创建一个sessionFactory对象

3 具体实现
（1）写工具类，写静态代码块实现
* 静态代码块在类加载时候执行，执行一次
    
Session（重点）
1 session类似于jdbc中connection

2 调用session里面不同的方法实现crud操作
（1）添加 save方法
（2）修改 update方法
（3）删除 delete方法
（4）根据id查询 get方法

3 session对象单线程对象
（1）session对象不能共用，只能自己使
Transaction
1 事务对
2 事务提交和回滚方
3 事务概念
（1）事务四个特性
原子性、一致性、隔离性、持久性

解决配置文件没有提示问题
1 可以上
2 把约束文件引入到eclipse中
（1）在配置文件中复制一句
